#spring.jpa.properties.hibernate.globally_quoted_identifiers_skip_column_definitions: true
#spring.jpa.properties.hibernate.globally_quoted_identifiers: true

spring:
  application.name: Pocket
  jpa:
    show-sql: true
#    database-platform: org.hibernate.dialect.MariaDBDialect
    properties:
      hibernate:
        globally_quoted_identifiers: true
        globally_quoted_identifiers_skip_column_definitions: true

  hibernate:
    generate-ddl: true
    ddl-auto: validate
    use-new-id-generator-mappings: true

  datasource:
    driverClassName: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/pocket5?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&autoReconnect=true&sslMode=DISABLED
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:passwd_to_change}

logging:
 level:
   it.salsi.pocket: INFO
   hibernate:
     SQL: WARN
     type: WARN
   org:
     atmosphere: WARN
     springframework:
       security: WARN
       web: WARN

server:
  port: ${SERVER_PORT:8081}
  api-version: /api/v5
  url: ${SERVER_URL:http://localhost:${server.port}}
  socket-port: 8300
  check-timestamp-last-update: true
  services-cron: 1 * * * * ?
  # Increase URL limits for long crypt parameters
  tomcat:
    max-http-form-post-size: 10MB
    max-parameter-count: 10000
  # Security configurations
  servlet:
    session:
      cookie:
        secure: true
        http-only: true
        same-site: strict
        max-age: 3600
  # AES configuration - MUST BE CHANGED IN PRODUCTION
  aes.cbc.iv: ${AES_CBC_IV:__iv_to_change__}
  auth:
    user: ${ADMIN_USER:admin@pocket.local}
    passwd: ${ADMIN_PASSWD:____admin_password_change_me____} # MUST BE CHANGED IN PRODUCTION WITH A 32 BYTESTRONG PASSWORD

# Security headers and configurations
security:
  headers:
    content-security-policy: "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none';"
  cors:
    # Additional allowed origins (comma separated)
    # Example: https://yourdomain.com,https://anotherdomain.com
    additional-origins: ${CORS_ADDITIONAL_ORIGINS:}

