# Virtual Host Configuration for Pocket Backend API
# Include this file in your main Apache configuration

# Development Virtual Host (HTTP only)
<VirtualHost *:80>
    ServerName localhost
    ServerAlias pocket-api.local
    
    DocumentRoot /var/www/html
    
    # Logging
    ErrorLog logs/pocket-dev_error.log
    CustomLog logs/pocket-dev_access.log combined
    
    # Proxy configuration for development
    ProxyPreserveHost On
    ProxyRequests Off
    
    # API routes to Spring Boot backend
    ProxyPass /api/ http://127.0.0.1:8081/api/
    ProxyPassReverse /api/ http://127.0.0.1:8081/api/
    
    # Actuator endpoints
    ProxyPass /actuator/ http://127.0.0.1:8081/actuator/
    ProxyPassReverse /actuator/ http://127.0.0.1:8081/actuator/
    
    # Health check
    ProxyPass /health http://127.0.0.1:8081/actuator/health
    ProxyPassReverse /health http://127.0.0.1:8081/actuator/health
    
    # CORS headers for development
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    
    # Handle OPTIONS requests
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]
</VirtualHost>

# Production Virtual Host (HTTPS)
<VirtualHost *:443>
    ServerName api.yourdomain.com
    ServerAlias pocket-api.yourdomain.com
    
    DocumentRoot /var/www/html
    
    # SSL Configuration
    SSLEngine on
    SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    SSLHonorCipherOrder off
    
    # SSL Certificates (adjust paths for your setup)
    SSLCertificateFile /etc/ssl/certs/api.yourdomain.com.crt
    SSLCertificateKeyFile /etc/ssl/private/api.yourdomain.com.key
    SSLCertificateChainFile /etc/ssl/certs/api.yourdomain.com-chain.crt
    
    # Security Headers
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    Header always set X-Content-Type-Options "nosniff"
    Header always set X-Frame-Options "DENY"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    
    # Logging
    ErrorLog logs/pocket-prod_error.log
    CustomLog logs/pocket-prod_access.log combined
    
    # Proxy configuration for production
    ProxyPreserveHost On
    ProxyRequests Off
    
    # Backend cluster for high availability
    <Proxy balancer://pocket-backend>
        # Primary backend
        BalancerMember http://127.0.0.1:8081 route=backend1
        # Secondary backend (uncomment for HA)
        # BalancerMember http://127.0.0.1:8082 route=backend2
        # External backend (uncomment for distributed setup)
        # BalancerMember http://backend2.yourdomain.com:8081 route=backend3
        
        ProxySet lbmethod byrequests
        ProxySet hcmethod GET
        ProxySet hcuri /actuator/health
    </Proxy>
    
    # API routes with load balancing
    ProxyPass /api/ balancer://pocket-backend/api/
    ProxyPassReverse /api/ balancer://pocket-backend/api/
    
    # Actuator endpoints (restricted access)
    <Location "/actuator/">
        ProxyPass balancer://pocket-backend/actuator/
        ProxyPassReverse balancer://pocket-backend/actuator/
        
        # Restrict to admin networks
        <RequireAll>
            Require ip 127.0.0.1
            Require ip 10.0.0.0/8
            Require ip 192.168.0.0/16
            # Add your admin IP ranges here
        </RequireAll>
    </Location>
    
    # Health check endpoint (for load balancers)
    ProxyPass /health balancer://pocket-backend/actuator/health
    ProxyPassReverse /health balancer://pocket-backend/actuator/health
    
    # Timeout settings
    ProxyTimeout 300
    
    # CORS configuration (adjust for your domains)
    SetEnvIf Origin "^https?://(www\.)?yourdomain\.com$" AccessControlAllowOrigin=$0
    Header always set Access-Control-Allow-Origin %{AccessControlAllowOrigin}e env=AccessControlAllowOrigin
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
    Header always set Access-Control-Max-Age "3600"
    
    # Handle preflight requests
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]
</VirtualHost>

# HTTP to HTTPS redirect
<VirtualHost *:80>
    ServerName api.yourdomain.com
    ServerAlias pocket-api.yourdomain.com
    
    # Redirect all HTTP to HTTPS
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [R=301,L]
    
    # Allow Let's Encrypt challenges
    RewriteCond %{REQUEST_URI} ^/.well-known/acme-challenge/
    RewriteRule ^(.*)$ - [L]
</VirtualHost>